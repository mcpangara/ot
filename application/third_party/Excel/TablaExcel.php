<?php	class XLSaHTML{		var $archivoXLS;		var $alto;		var $ancho;		var $id;		var $strHTML="";		var $archTemporal="tmp/tmp.xls";		var $xls=[];		var $xls_temp=[];		var $estadoEstructura;		public function __construct($archivoXLS,$id, $alto, $ancho){			$this->archivoXLS=$archivoXLS;			$this->id=$id;			$this->alto=$alto;			$this->ancho=$ancho;			$this->strHTML="";			$this->CopiarArchivo();		}				public function CopiarArchivo(){			if (move_uploaded_file($this->archivoXLS, $this->archTemporal)) {				$this->GenerarTabla();			} else {				$archTemporal='';			}		}					public function GenerarTablaOff($archTemporal){			if (!empty($archTemporal)){				$data = new Spreadsheet_Excel_Reader();				$data->setOutputEncoding('CP1251');				$data->read($archTemporal);				error_reporting(E_ALL ^ E_NOTICE);				$this->strHTML.= "<div>";				$this->strHTML.= "<table id='{$this->id}' class='display reponsive nowrap' width='100%'>";				for ($i = 1; $i <= $data->sheets[0]['numRows']; $i++) {					$this->strHTML.= (($i==1)?"\n<thead><tr>":"\n<tr>");					for ($j = 1; $j <= $data->sheets[0]['numCols']; $j++) {						$this->strHTML.= "<td>{$data->sheets[0]['cells'][$i][$j]}</td>";					}					$this->strHTML.= (($i==1)?"</tr></thead><tbody>":"</tr>");				}				$this->strHTML.= "</tbody></table>";				$this->strHTML.= "</div>";				unlink($archTemporal);			}else{				echo "no se genero la tabla";			}			}				public function GenerarTablaXXX($archTemporal){			if (!empty($archTemporal)){				$data = new Spreadsheet_Excel_Reader();				$data->setOutputEncoding('CP1251');				$data->read($archTemporal);				error_reporting(E_ALL ^ E_NOTICE);				$this->strHTML.= "<div style='overflow:scroll;height:60%;' width='100%'>";				$this->strHTML.= "<table id='{$this->id}' cellspacing='0' cellpadding='0'>";				for ($i = 1; $i <= $data->sheets[0]['numRows']; $i++) {					if($i%2==0){						$color1='#ffffff';					}else{						$color1='#e0e0e0';					}					$this->strHTML.= (($i==1)?"\n<thead><tr style='background-color:#000000;color:#fff;'>":"\n<tr style='background-color:{$color1};'>");					for ($j = 1; $j <= $data->sheets[0]['numCols']; $j++) {						if ($i==1){							$this->strHTML.= "<th>{$data->sheets[0]['cells'][$i][$j]}</th>";						}else{							$this->strHTML.= "<td>{$data->sheets[0]['cells'][$i][$j]}</td>";						}					}					$this->strHTML.= (($i==1)?"</tr></thead><tbody>":"</tr>");				}				$this->strHTML.= "</tbody></table>";				$this->strHTML.= "</div>";				unlink($archTemporal);			}else{				echo "no se genero la tabla";			}			}		public function GenerarTabla_X1($archTemporal){			if (!empty($archTemporal)){				$data = new Spreadsheet_Excel_Reader();				$data->setOutputEncoding('CP1251');				$data->read($archTemporal);				error_reporting(E_ALL ^ E_NOTICE);				//$this->strHTML.= "<div style='overflow:scroll;height:60%;' width='100%'>";				$this->strHTML.= "<div>";				$this->strHTML.= "<table id='{$this->id}' cellspacing='0' cellpadding='0' class='mytable' >";				for ($i = 1; $i <= $data->sheets[0]['numRows']; $i++) {					$this->strHTML.= (($i==1)?"\n<thead><tr>":"\n<tr>");					for ($j = 1; $j <= $data->sheets[0]['numCols']; $j++) {						if ($i==1){							$this->strHTML.= "<th>{$data->sheets[0]['cells'][$i][$j]}</th>";						}else{							$this->strHTML.= "<td>{$data->sheets[0]['cells'][$i][$j]}</td>";						}					}					$this->strHTML.= (($i==1)?"</tr></thead><tbody>":"</tr>");				}				$this->strHTML.= "</tbody></table>";				$this->strHTML.= "</div>";				unlink($archTemporal);			}else{				echo "no se genero la tabla";			}			}		public function GenerarTabla($archTemporal){			if (!empty($archTemporal)){				$data = new Spreadsheet_Excel_Reader();				$data->setOutputEncoding('CP1251');				$data->read($archTemporal);				error_reporting(E_ALL ^ E_NOTICE);								for ($i = 1; $i <= $data->sheets[0]['numRows']; $i++) {					$xls_temp=[];					for ($j = 1; $j <= $data->sheets[0]['numCols']; $j++) {						array_push($xls_temp,$data->sheets[0]['cells'][$i][$j]);					}					array_push($this->xls,$xls_temp);				}				// $this->strHTML.= "<div>";				// $this->strHTML.= "<table id='{$this->id}' cellspacing='0' cellpadding='0' class='mytable' >";								// for ($i = 0; $i < count($this->xls); $i++) {					// $this->strHTML.= (($i==0)?"\n<thead><tr>":"\n<tr>");					// for ($j = 0; $j < count($this->xls[$i]); $j++) {												// if ($i==0){							// $this->strHTML.= "<th>{$this->xls[$i][$j]}</th>";						// }else{							// $this->strHTML.= "<td>{$this->xls[$i][$j]}</td>";						// }					// }					// $this->strHTML.= (($i==1)?"</tr></thead><tbody>":"</tr>");				// }				// $this->strHTML.= "</tbody></table>";				// $this->strHTML.= "</div>";				$this->setEstructuraOK();				if ($this->getSwEstru()){					echo "<br><div style='color:white;background:blue;'>[Estructura OK]</div><br>\n";					echo "inicio\n";					$this->setDBF();				}else{					echo "<br><div style='color:white;background:red;'>[Error en la estructura...]</div><br>\n";				}								unlink($archTemporal);			}else{				echo "no se genero la tabla";			}			}		public function getStrHTML(){			return $this->strHTML;		}					public function getXls(){			return $this->xls;		}		public function setEstructuraOK(){			$camposTabla = array(				'ID','FAC','BASE','TOMO','CDCOSTO','TIPO','CODIGO',				'DIA','FECHA','TIPODIA','CDORDEN','NIT','NOMBRE','ITEM',				'DESCRIPCIO','REGIMEN','CLASIFICA','TARIFA','UNIDAD','CANTIDAD1',				'CANTIDAD2','CANT_TOTAL','VALOR','ADM','IMP','UTI',				'VALORTOT','LUGAR','MUNICIPIO','SECTOR','APL','FECHACOS','ORDEN'			);						$camposXLS=$this->getXls()[0];			$SwEstructura=true;			for ($j = 1; $j <= count($camposXLS); $j++) {				$SwEstructura = $SwEstructura && in_array($camposXLS[$j-1], $camposTabla);			}		   $this->estadoEstructura = $SwEstructura;		}				public function setDBF(){			$camposTabla = array(				array("ID","N",4,0),				array("FAC","C",8),				array("BASE","C",5),				array("TOMO","C",8),				array("CDCOSTO","C",20),				array("CODIGO","C",12),				array("TIPO","C",10),				array("DIA","C",2),				array("FECHA","C",35),				array("TIPODIA","C",10),				array("CDORDEN","C",14),				array("NIT","C",11),				array("NOMBRE","C",30),				array("ITEM","C",10),				array("DESCRIPCIO","C",100),				array("REGIMEN","C",1),				array("CLASIFICA","C",4),				array("TARIFA","N",12,0),				array("UNIDAD","C",10),				array("CANTIDAD1","N",15,8),				array("CANTIDAD2","N",15,8),				array("CANT_TOTAL","N",15,8),				array("VALOR","N",14,2),				array("ADM","N",15,5),				array("IMP","N",15,5),				array("UTI","N",15,5),				array("VALORTOT","N",15,5),				array("LUGAR","C",20),				array("MUNICIPIO","C",20),				array("SECTOR","C",20),				array("APL","C",10),				array("FECHACOS","D"),				array("ORDEN","C",20)			);				$datosDBFarray = array();			$idDBF=dbase_create('datos.dbf', $camposTabla);				if (!$idDBF) {				echo "<br><div style='color:white;background:red;'>[Error, no se puede crear la base de datos\n]</div><br>";			}			for ($i = 1; $i < count($this->getXls()); $i++) {				$datosDBF=$this->getXls()[$i];				for ($j = 0; $j < count($datosDBF); $j++) {					//echo $camposTabla[$j][1]."<br>";					if ($camposTabla[$j][1]=="D"){						$originalDate = date('Ymd', strtotime("-1 day",strtotime(str_replace('/','-',$datosDBF[$j]))));						$datosDBFarray[$j] = $originalDate;						//echo $datosDBF[$j]."---".$originalDate."<br>";					}else{						$datosDBFarray[$j] = $datosDBF[$j];					}				}								dbase_add_record($idDBF, $datosDBFarray);   			}			if ($idDBF) {				dbase_close($idDBF);				echo "<br><div style='color:white;background:blue;'>[Tabla creada]</div><br>";			}else{				echo "<br><div style='color:white;background:red;'>[Error, no se puede crear la base de datos\n]</div><br>";			}					}		public function getSwEstru(){			return $this->estadoEstructura;		}							function __destruct() {;}		}?>